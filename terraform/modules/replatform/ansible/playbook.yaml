- hosts:
  - localhost
  vars:
    template_git: "{{ lookup('ansible.builtin.env', 'TEMPLATE_GIT', default=Undefined)}}"
    template_path: "{{ lookup('ansible.builtin.env', 'TEMPLATE_PATH', default=Undefined)}}"
    project_git: "{{ lookup('ansible.builtin.env', 'PROJECT_GIT', default=Undefined)}}"
    project_id: "{{ lookup('ansible.builtin.env', 'PROJECT_ID', default=Undefined)}}"
    repo_sa: "{{ lookup('ansible.builtin.env', 'REPO_SA', default=Undefined)}}"
    custom_metrics_sa: "{{ lookup('ansible.builtin.env', 'CUSTOM_METRICS_SA', default=Undefined)}}"
    external_secret_path: "{{ lookup('ansible.builtin.env', 'EXTERNAL_SECRET_PATH', default='secondary/external-secrets')}}"
    external_kanboard_path: "{{ lookup('ansible.builtin.env', 'EXTERNAL_KANBOARD_PATH', default='secondary/kanboard')}}"
    kanboard_sa: "{{ lookup('ansible.builtin.env', 'KANBOARD_SA', default=Undefined)}}"
    ssl_domain: "{{ lookup('ansible.builtin.env', 'SSL_DOMAIN', default=Undefined)}}"
  tasks:
    - name: Create temporary build directory
      ansible.builtin.tempfile:
        state: directory
      register: workdir
    - name: Check that the environment is clean
      file:
        path: "{{workdir.path}}/template"
        state: absent
    - name: Clone Template Repo
      ansible.builtin.git:
        repo: "{{ template_git }}"
        dest: "{{workdir.path}}/template"
    - name: Remove Git Files
      file:
        path: "{{workdir.path}}/template/.git"
        state: absent
    - name: Clone Project Repo
      shell: |
          gcloud source repos clone {{ project_git }} {{workdir.path}}/project --project={{ project_id }}

    - name: Create directories
      file:
        path: "{{workdir.path}}/project/{{ item.path }}"
        state: directory
        mode: '{{ item.mode }}'
      with_community.general.filetree: "{{workdir.path}}/template/{{template_path}}/"
      when: item.state == 'directory'

    - name: Template files
      template:
        src: '{{ item.src }}'
        dest: "{{workdir.path}}/project/{{ item.path }}"
        mode: '{{ item.mode }}'
      with_community.general.filetree: "{{workdir.path}}/template/{{template_path}}/"
      when: item.state == 'file'

    - name: Recreate symlinks
      file:
        src: '{{ item.src }}'
        dest: "{{workdir.path}}/project/{{ item.path }}"
        state: link
        force: yes
        mode: '{{ item.mode }}'
      with_community.general.filetree: "{{workdir.path}}/template/{{template_path}}/"
      when: item.state == 'link'

    - name: Commit changes #This thing should fail in cloudbuild
      shell: |
          cd  "{{workdir.path}}/project" && \
          git add . && \
          if [ $(git status --porcelain|wc -l) -gt 0 ];then git commit -am "Refresh {{ansible_date_time.iso8601}}"; fi && \
          git push origin master